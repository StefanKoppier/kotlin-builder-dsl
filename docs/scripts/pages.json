[{"name":"abstract class EnumBuilder<E : Enum<E>>(val faker: Faker = Faker()) : BuilderDsl<E> ","description":"com.github.stefankoppier.builder.dsl.EnumBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder/index.html","searchKeys":["EnumBuilder","abstract class EnumBuilder<E : Enum<E>>(val faker: Faker = Faker()) : BuilderDsl<E> ","com.github.stefankoppier.builder.dsl.EnumBuilder"]},{"name":"abstract class NumberBuilder<T : Number, B : NumberBuilder<T, B>>(faker: Faker = Faker()) : BuilderDsl<T> ","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/index.html","searchKeys":["NumberBuilder","abstract class NumberBuilder<T : Number, B : NumberBuilder<T, B>>(faker: Faker = Faker()) : BuilderDsl<T> ","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder"]},{"name":"class BigDecimalBuilder(faker: Faker = Faker()) : NumberBuilder<BigDecimal, BigDecimalBuilder> ","description":"com.github.stefankoppier.builder.dsl.BigDecimalBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-big-decimal-builder/index.html","searchKeys":["BigDecimalBuilder","class BigDecimalBuilder(faker: Faker = Faker()) : NumberBuilder<BigDecimal, BigDecimalBuilder> ","com.github.stefankoppier.builder.dsl.BigDecimalBuilder"]},{"name":"class BooleanBuilder(faker: Faker = Faker()) : BuilderDsl<Boolean> ","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder/index.html","searchKeys":["BooleanBuilder","class BooleanBuilder(faker: Faker = Faker()) : BuilderDsl<Boolean> ","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder"]},{"name":"class ByteBuilder(faker: Faker = Faker()) : NumberBuilder<Byte, ByteBuilder> ","description":"com.github.stefankoppier.builder.dsl.primitives.ByteBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-byte-builder/index.html","searchKeys":["ByteBuilder","class ByteBuilder(faker: Faker = Faker()) : NumberBuilder<Byte, ByteBuilder> ","com.github.stefankoppier.builder.dsl.primitives.ByteBuilder"]},{"name":"class DoubleBuilder(faker: Faker = Faker()) : NumberBuilder<Double, DoubleBuilder> ","description":"com.github.stefankoppier.builder.dsl.primitives.DoubleBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-double-builder/index.html","searchKeys":["DoubleBuilder","class DoubleBuilder(faker: Faker = Faker()) : NumberBuilder<Double, DoubleBuilder> ","com.github.stefankoppier.builder.dsl.primitives.DoubleBuilder"]},{"name":"class Faker(random: Random = Random.Default)","description":"com.github.stefankoppier.builder.dsl.Faker","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/index.html","searchKeys":["Faker","class Faker(random: Random = Random.Default)","com.github.stefankoppier.builder.dsl.Faker"]},{"name":"class FloatBuilder(faker: Faker = Faker()) : NumberBuilder<Float, FloatBuilder> ","description":"com.github.stefankoppier.builder.dsl.primitives.FloatBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-float-builder/index.html","searchKeys":["FloatBuilder","class FloatBuilder(faker: Faker = Faker()) : NumberBuilder<Float, FloatBuilder> ","com.github.stefankoppier.builder.dsl.primitives.FloatBuilder"]},{"name":"class IntBuilder(faker: Faker = Faker()) : NumberBuilder<Int, IntBuilder> ","description":"com.github.stefankoppier.builder.dsl.primitives.IntBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-int-builder/index.html","searchKeys":["IntBuilder","class IntBuilder(faker: Faker = Faker()) : NumberBuilder<Int, IntBuilder> ","com.github.stefankoppier.builder.dsl.primitives.IntBuilder"]},{"name":"class ListBuilder<E, B : BuilderDsl<E>>(factory: B, faker: Faker = Faker()) : BuilderDsl<List<E>> ","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/index.html","searchKeys":["ListBuilder","class ListBuilder<E, B : BuilderDsl<E>>(factory: B, faker: Faker = Faker()) : BuilderDsl<List<E>> ","com.github.stefankoppier.builder.dsl.containers.ListBuilder"]},{"name":"class LocalDateBuilder(faker: Faker = Faker()) : BuilderDsl<LocalDate> ","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder/index.html","searchKeys":["LocalDateBuilder","class LocalDateBuilder(faker: Faker = Faker()) : BuilderDsl<LocalDate> ","com.github.stefankoppier.builder.dsl.LocalDateBuilder"]},{"name":"class LongBuilder(faker: Faker = Faker()) : NumberBuilder<Long, LongBuilder> ","description":"com.github.stefankoppier.builder.dsl.primitives.LongBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-long-builder/index.html","searchKeys":["LongBuilder","class LongBuilder(faker: Faker = Faker()) : NumberBuilder<Long, LongBuilder> ","com.github.stefankoppier.builder.dsl.primitives.LongBuilder"]},{"name":"class NullableBuilder<T, B : BuilderDsl<T>>(factory: B, faker: Faker = Faker()) : BuilderDsl<T?> ","description":"com.github.stefankoppier.builder.dsl.containers.NullableBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-nullable-builder/index.html","searchKeys":["NullableBuilder","class NullableBuilder<T, B : BuilderDsl<T>>(factory: B, faker: Faker = Faker()) : BuilderDsl<T?> ","com.github.stefankoppier.builder.dsl.containers.NullableBuilder"]},{"name":"class OffsetDateTimeBuilder(faker: Faker = Faker()) : BuilderDsl<OffsetDateTime> ","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder/index.html","searchKeys":["OffsetDateTimeBuilder","class OffsetDateTimeBuilder(faker: Faker = Faker()) : BuilderDsl<OffsetDateTime> ","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder"]},{"name":"class StringBuilder(faker: Faker = Faker()) : BuilderDsl<String> ","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/index.html","searchKeys":["StringBuilder","class StringBuilder(faker: Faker = Faker()) : BuilderDsl<String> ","com.github.stefankoppier.builder.dsl.primitives.StringBuilder"]},{"name":"fun <B : BuilderDsl<E>> ListBuilder(factory: B, faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder.ListBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/-list-builder.html","searchKeys":["ListBuilder","fun <B : BuilderDsl<E>> ListBuilder(factory: B, faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.containers.ListBuilder.ListBuilder"]},{"name":"fun <B : BuilderDsl<T>> NullableBuilder(factory: B, faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.containers.NullableBuilder.NullableBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-nullable-builder/-nullable-builder.html","searchKeys":["NullableBuilder","fun <B : BuilderDsl<T>> NullableBuilder(factory: B, faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.containers.NullableBuilder.NullableBuilder"]},{"name":"fun BigDecimalBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.BigDecimalBuilder.BigDecimalBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-big-decimal-builder/-big-decimal-builder.html","searchKeys":["BigDecimalBuilder","fun BigDecimalBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.BigDecimalBuilder.BigDecimalBuilder"]},{"name":"fun Boolean.Companion.of(transform: BooleanBuilder.() -> BooleanBuilder = { BooleanBuilder() }): Boolean","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Boolean.Companion.of(transform: BooleanBuilder.() -> BooleanBuilder = { BooleanBuilder() }): Boolean","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun BooleanBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder.BooleanBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder/-boolean-builder.html","searchKeys":["BooleanBuilder","fun BooleanBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder.BooleanBuilder"]},{"name":"fun Byte.Companion.of(transform: ByteBuilder.() -> ByteBuilder = { ByteBuilder() }): Byte","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Byte.Companion.of(transform: ByteBuilder.() -> ByteBuilder = { ByteBuilder() }): Byte","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun ByteBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.ByteBuilder.ByteBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-byte-builder/-byte-builder.html","searchKeys":["ByteBuilder","fun ByteBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.ByteBuilder.ByteBuilder"]},{"name":"fun Double.Companion.of(transform: DoubleBuilder.() -> DoubleBuilder = { DoubleBuilder() }): Double","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Double.Companion.of(transform: DoubleBuilder.() -> DoubleBuilder = { DoubleBuilder() }): Double","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun DoubleBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.DoubleBuilder.DoubleBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-double-builder/-double-builder.html","searchKeys":["DoubleBuilder","fun DoubleBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.DoubleBuilder.DoubleBuilder"]},{"name":"fun EnumBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.EnumBuilder.EnumBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder/-enum-builder.html","searchKeys":["EnumBuilder","fun EnumBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.EnumBuilder.EnumBuilder"]},{"name":"fun Faker(random: Random = Random.Default)","description":"com.github.stefankoppier.builder.dsl.Faker.Faker","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/-faker.html","searchKeys":["Faker","fun Faker(random: Random = Random.Default)","com.github.stefankoppier.builder.dsl.Faker.Faker"]},{"name":"fun Float.Companion.of(transform: FloatBuilder.() -> FloatBuilder = { FloatBuilder() }): Float","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Float.Companion.of(transform: FloatBuilder.() -> FloatBuilder = { FloatBuilder() }): Float","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun FloatBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.FloatBuilder.FloatBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-float-builder/-float-builder.html","searchKeys":["FloatBuilder","fun FloatBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.FloatBuilder.FloatBuilder"]},{"name":"fun Int.Companion.of(transform: IntBuilder.() -> IntBuilder = { IntBuilder() }): Int","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Int.Companion.of(transform: IntBuilder.() -> IntBuilder = { IntBuilder() }): Int","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun IntBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.IntBuilder.IntBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-int-builder/-int-builder.html","searchKeys":["IntBuilder","fun IntBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.IntBuilder.IntBuilder"]},{"name":"fun LocalDateBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilder.LocalDateBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder/-local-date-builder.html","searchKeys":["LocalDateBuilder","fun LocalDateBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.LocalDateBuilder.LocalDateBuilder"]},{"name":"fun Long.Companion.of(transform: LongBuilder.() -> LongBuilder = { LongBuilder() }): Long","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Long.Companion.of(transform: LongBuilder.() -> LongBuilder = { LongBuilder() }): Long","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun LongBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.LongBuilder.LongBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-long-builder/-long-builder.html","searchKeys":["LongBuilder","fun LongBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.LongBuilder.LongBuilder"]},{"name":"fun NumberBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.NumberBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/-number-builder.html","searchKeys":["NumberBuilder","fun NumberBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.NumberBuilder"]},{"name":"fun OffsetDateTimeBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder.OffsetDateTimeBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder/-offset-date-time-builder.html","searchKeys":["OffsetDateTimeBuilder","fun OffsetDateTimeBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder.OffsetDateTimeBuilder"]},{"name":"fun String.Companion.of(transform: StringBuilder.() -> StringBuilder = { StringBuilder() }): String","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun String.Companion.of(transform: StringBuilder.() -> StringBuilder = { StringBuilder() }): String","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun StringBuilder(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.StringBuilder","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/-string-builder.html","searchKeys":["StringBuilder","fun StringBuilder(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.StringBuilder"]},{"name":"fun asNonNull(): NullableBuilder<T, B>","description":"com.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNonNull","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-nullable-builder/as-non-null.html","searchKeys":["asNonNull","fun asNonNull(): NullableBuilder<T, B>","com.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNonNull"]},{"name":"fun asNull(): NullableBuilder<T, B>","description":"com.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNull","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-nullable-builder/as-null.html","searchKeys":["asNull","fun asNull(): NullableBuilder<T, B>","com.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNull"]},{"name":"fun between(min: Int, max: Int): ListBuilder<E, B>","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder.between","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/between.html","searchKeys":["between","fun between(min: Int, max: Int): ListBuilder<E, B>","com.github.stefankoppier.builder.dsl.containers.ListBuilder.between"]},{"name":"fun between(min: Int, max: Int): StringBuilder","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.between","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/between.html","searchKeys":["between","fun between(min: Int, max: Int): StringBuilder","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.between"]},{"name":"fun between(min: T, max: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.between","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/between.html","searchKeys":["between","fun between(min: T, max: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.between"]},{"name":"fun boolean(): Boolean","description":"com.github.stefankoppier.builder.dsl.Faker.boolean","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/boolean.html","searchKeys":["boolean","fun boolean(): Boolean","com.github.stefankoppier.builder.dsl.Faker.boolean"]},{"name":"fun byte(min: Byte = Byte.MIN_VALUE, max: Byte = Byte.MAX_VALUE): Byte","description":"com.github.stefankoppier.builder.dsl.Faker.byte","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/byte.html","searchKeys":["byte","fun byte(min: Byte = Byte.MIN_VALUE, max: Byte = Byte.MAX_VALUE): Byte","com.github.stefankoppier.builder.dsl.Faker.byte"]},{"name":"fun char(pool: List<Char> = ('a'..'z') + ('A'..'Z') + ('0'..'9') + ' '): Char","description":"com.github.stefankoppier.builder.dsl.Faker.char","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/char.html","searchKeys":["char","fun char(pool: List<Char> = ('a'..'z') + ('A'..'Z') + ('0'..'9') + ' '): Char","com.github.stefankoppier.builder.dsl.Faker.char"]},{"name":"fun constant(value: Boolean): BooleanBuilder","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder/constant.html","searchKeys":["constant","fun constant(value: Boolean): BooleanBuilder","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder.constant"]},{"name":"fun constant(value: E): EnumBuilder<E>","description":"com.github.stefankoppier.builder.dsl.EnumBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder/constant.html","searchKeys":["constant","fun constant(value: E): EnumBuilder<E>","com.github.stefankoppier.builder.dsl.EnumBuilder.constant"]},{"name":"fun constant(value: List<E>): ListBuilder<E, B>","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/constant.html","searchKeys":["constant","fun constant(value: List<E>): ListBuilder<E, B>","com.github.stefankoppier.builder.dsl.containers.ListBuilder.constant"]},{"name":"fun constant(value: LocalDate): LocalDateBuilder","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder/constant.html","searchKeys":["constant","fun constant(value: LocalDate): LocalDateBuilder","com.github.stefankoppier.builder.dsl.LocalDateBuilder.constant"]},{"name":"fun constant(value: OffsetDateTime): OffsetDateTimeBuilder","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder/constant.html","searchKeys":["constant","fun constant(value: OffsetDateTime): OffsetDateTimeBuilder","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder.constant"]},{"name":"fun constant(value: String): StringBuilder","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/constant.html","searchKeys":["constant","fun constant(value: String): StringBuilder","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.constant"]},{"name":"fun constant(value: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/constant.html","searchKeys":["constant","fun constant(value: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.constant"]},{"name":"fun double(min: Double = Double.MIN_VALUE, max: Double = Double.MAX_VALUE): Double","description":"com.github.stefankoppier.builder.dsl.Faker.double","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/double.html","searchKeys":["double","fun double(min: Double = Double.MIN_VALUE, max: Double = Double.MAX_VALUE): Double","com.github.stefankoppier.builder.dsl.Faker.double"]},{"name":"fun filter(predicate: (E) -> Boolean): EnumBuilder<E>","description":"com.github.stefankoppier.builder.dsl.EnumBuilder.filter","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder/filter.html","searchKeys":["filter","fun filter(predicate: (E) -> Boolean): EnumBuilder<E>","com.github.stefankoppier.builder.dsl.EnumBuilder.filter"]},{"name":"fun float(min: Float = Float.MIN_VALUE, max: Float = Float.MAX_VALUE): Float","description":"com.github.stefankoppier.builder.dsl.Faker.float","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/float.html","searchKeys":["float","fun float(min: Float = Float.MIN_VALUE, max: Float = Float.MAX_VALUE): Float","com.github.stefankoppier.builder.dsl.Faker.float"]},{"name":"fun format(pattern: String): StringBuilder","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.format","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/format.html","searchKeys":["format","fun format(pattern: String): StringBuilder","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.format"]},{"name":"fun int(min: Int = Int.MIN_VALUE, max: Int = Int.MAX_VALUE): Int","description":"com.github.stefankoppier.builder.dsl.Faker.int","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/int.html","searchKeys":["int","fun int(min: Int = Int.MIN_VALUE, max: Int = Int.MAX_VALUE): Int","com.github.stefankoppier.builder.dsl.Faker.int"]},{"name":"fun localDate(): LocalDate","description":"com.github.stefankoppier.builder.dsl.Faker.localDate","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/local-date.html","searchKeys":["localDate","fun localDate(): LocalDate","com.github.stefankoppier.builder.dsl.Faker.localDate"]},{"name":"fun localTime(): LocalTime","description":"com.github.stefankoppier.builder.dsl.Faker.localTime","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/local-time.html","searchKeys":["localTime","fun localTime(): LocalTime","com.github.stefankoppier.builder.dsl.Faker.localTime"]},{"name":"fun long(min: Long = Long.MIN_VALUE, max: Long = Long.MAX_VALUE): Long","description":"com.github.stefankoppier.builder.dsl.Faker.long","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/long.html","searchKeys":["long","fun long(min: Long = Long.MIN_VALUE, max: Long = Long.MAX_VALUE): Long","com.github.stefankoppier.builder.dsl.Faker.long"]},{"name":"fun max(max: Int): ListBuilder<E, B>","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder.max","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/max.html","searchKeys":["max","fun max(max: Int): ListBuilder<E, B>","com.github.stefankoppier.builder.dsl.containers.ListBuilder.max"]},{"name":"fun max(max: Int): StringBuilder","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.max","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/max.html","searchKeys":["max","fun max(max: Int): StringBuilder","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.max"]},{"name":"fun max(max: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.max","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/max.html","searchKeys":["max","fun max(max: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.max"]},{"name":"fun min(min: Int): ListBuilder<E, B>","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder.min","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/min.html","searchKeys":["min","fun min(min: Int): ListBuilder<E, B>","com.github.stefankoppier.builder.dsl.containers.ListBuilder.min"]},{"name":"fun min(min: Int): StringBuilder","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.min","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/min.html","searchKeys":["min","fun min(min: Int): StringBuilder","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.min"]},{"name":"fun min(min: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.min","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/min.html","searchKeys":["min","fun min(min: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.min"]},{"name":"fun offsetDateTime(): OffsetDateTime","description":"com.github.stefankoppier.builder.dsl.Faker.offsetDateTime","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/offset-date-time.html","searchKeys":["offsetDateTime","fun offsetDateTime(): OffsetDateTime","com.github.stefankoppier.builder.dsl.Faker.offsetDateTime"]},{"name":"fun string(min: Int = 0, max: Int = 24): String","description":"com.github.stefankoppier.builder.dsl.Faker.string","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/string.html","searchKeys":["string","fun string(min: Int = 0, max: Int = 24): String","com.github.stefankoppier.builder.dsl.Faker.string"]},{"name":"inline fun <E : Enum<E>> enum(predicate: (E) -> Boolean = { true }): E","description":"com.github.stefankoppier.builder.dsl.Faker.enum","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> enum(predicate: (E) -> Boolean = { true }): E","com.github.stefankoppier.builder.dsl.Faker.enum"]},{"name":"interface BuilderDsl<T> : Function0<T> ","description":"com.github.stefankoppier.builder.dsl.BuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-builder-dsl/index.html","searchKeys":["BuilderDsl","interface BuilderDsl<T> : Function0<T> ","com.github.stefankoppier.builder.dsl.BuilderDsl"]},{"name":"open operator override fun invoke(): Boolean","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): Boolean","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilder.invoke"]},{"name":"open operator override fun invoke(): E","description":"com.github.stefankoppier.builder.dsl.EnumBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): E","com.github.stefankoppier.builder.dsl.EnumBuilder.invoke"]},{"name":"open operator override fun invoke(): List<E>","description":"com.github.stefankoppier.builder.dsl.containers.ListBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-list-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): List<E>","com.github.stefankoppier.builder.dsl.containers.ListBuilder.invoke"]},{"name":"open operator override fun invoke(): LocalDate","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): LocalDate","com.github.stefankoppier.builder.dsl.LocalDateBuilder.invoke"]},{"name":"open operator override fun invoke(): OffsetDateTime","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): OffsetDateTime","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilder.invoke"]},{"name":"open operator override fun invoke(): String","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): String","com.github.stefankoppier.builder.dsl.primitives.StringBuilder.invoke"]},{"name":"open operator override fun invoke(): T","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): T","com.github.stefankoppier.builder.dsl.primitives.NumberBuilder.invoke"]},{"name":"open operator override fun invoke(): T?","description":"com.github.stefankoppier.builder.dsl.containers.NullableBuilder.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.containers/-nullable-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): T?","com.github.stefankoppier.builder.dsl.containers.NullableBuilder.invoke"]},{"name":"val faker: Faker","description":"com.github.stefankoppier.builder.dsl.EnumBuilder.faker","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder/faker.html","searchKeys":["faker","val faker: Faker","com.github.stefankoppier.builder.dsl.EnumBuilder.faker"]}]
