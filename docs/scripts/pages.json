[{"name":"abstract class EnumBuilderDsl<E : Enum<E>>(val faker: Faker = Faker()) : BuilderDsl<E> ","description":"com.github.stefankoppier.builder.dsl.EnumBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder-dsl/index.html","searchKeys":["EnumBuilderDsl","abstract class EnumBuilderDsl<E : Enum<E>>(val faker: Faker = Faker()) : BuilderDsl<E> ","com.github.stefankoppier.builder.dsl.EnumBuilderDsl"]},{"name":"abstract class NumberBuilderDsl<T : Number, B : NumberBuilderDsl<T, B>>(faker: Faker = Faker()) : BuilderDsl<T> ","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/index.html","searchKeys":["NumberBuilderDsl","abstract class NumberBuilderDsl<T : Number, B : NumberBuilderDsl<T, B>>(faker: Faker = Faker()) : BuilderDsl<T> ","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl"]},{"name":"class BigDecimalBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<BigDecimal, BigDecimalBuilderDsl> ","description":"com.github.stefankoppier.builder.dsl.BigDecimalBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-big-decimal-builder-dsl/index.html","searchKeys":["BigDecimalBuilderDsl","class BigDecimalBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<BigDecimal, BigDecimalBuilderDsl> ","com.github.stefankoppier.builder.dsl.BigDecimalBuilderDsl"]},{"name":"class BooleanBuilderDsl(faker: Faker = Faker()) : BuilderDsl<Boolean> ","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder-dsl/index.html","searchKeys":["BooleanBuilderDsl","class BooleanBuilderDsl(faker: Faker = Faker()) : BuilderDsl<Boolean> ","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl"]},{"name":"class DoubleBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Double, DoubleBuilderDsl> ","description":"com.github.stefankoppier.builder.dsl.primitives.DoubleBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-double-builder-dsl/index.html","searchKeys":["DoubleBuilderDsl","class DoubleBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Double, DoubleBuilderDsl> ","com.github.stefankoppier.builder.dsl.primitives.DoubleBuilderDsl"]},{"name":"class Faker(random: Random = Random.Default)","description":"com.github.stefankoppier.builder.dsl.Faker","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/index.html","searchKeys":["Faker","class Faker(random: Random = Random.Default)","com.github.stefankoppier.builder.dsl.Faker"]},{"name":"class FloatBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Float, FloatBuilderDsl> ","description":"com.github.stefankoppier.builder.dsl.primitives.FloatBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-float-builder-dsl/index.html","searchKeys":["FloatBuilderDsl","class FloatBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Float, FloatBuilderDsl> ","com.github.stefankoppier.builder.dsl.primitives.FloatBuilderDsl"]},{"name":"class IntBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Int, IntBuilderDsl> ","description":"com.github.stefankoppier.builder.dsl.primitives.IntBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-int-builder-dsl/index.html","searchKeys":["IntBuilderDsl","class IntBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Int, IntBuilderDsl> ","com.github.stefankoppier.builder.dsl.primitives.IntBuilderDsl"]},{"name":"class ListBuilderDsl<E, B : BuilderDsl<E>>(factory: B, faker: Faker = Faker()) : BuilderDsl<List<E>> ","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/index.html","searchKeys":["ListBuilderDsl","class ListBuilderDsl<E, B : BuilderDsl<E>>(factory: B, faker: Faker = Faker()) : BuilderDsl<List<E>> ","com.github.stefankoppier.builder.dsl.ListBuilderDsl"]},{"name":"class LocalDateBuilderDsl(faker: Faker = Faker()) : BuilderDsl<LocalDate> ","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder-dsl/index.html","searchKeys":["LocalDateBuilderDsl","class LocalDateBuilderDsl(faker: Faker = Faker()) : BuilderDsl<LocalDate> ","com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl"]},{"name":"class LongBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Long, LongBuilderDsl> ","description":"com.github.stefankoppier.builder.dsl.primitives.LongBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-long-builder-dsl/index.html","searchKeys":["LongBuilderDsl","class LongBuilderDsl(faker: Faker = Faker()) : NumberBuilderDsl<Long, LongBuilderDsl> ","com.github.stefankoppier.builder.dsl.primitives.LongBuilderDsl"]},{"name":"class OffsetDateTimeBuilderDsl(faker: Faker = Faker()) : BuilderDsl<OffsetDateTime> ","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder-dsl/index.html","searchKeys":["OffsetDateTimeBuilderDsl","class OffsetDateTimeBuilderDsl(faker: Faker = Faker()) : BuilderDsl<OffsetDateTime> ","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl"]},{"name":"class StringBuilderDsl(faker: Faker = Faker()) : BuilderDsl<String> ","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/index.html","searchKeys":["StringBuilderDsl","class StringBuilderDsl(faker: Faker = Faker()) : BuilderDsl<String> ","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl"]},{"name":"fun <B : BuilderDsl<E>> ListBuilderDsl(factory: B, faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl.ListBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/-list-builder-dsl.html","searchKeys":["ListBuilderDsl","fun <B : BuilderDsl<E>> ListBuilderDsl(factory: B, faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.ListBuilderDsl.ListBuilderDsl"]},{"name":"fun BigDecimalBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.BigDecimalBuilderDsl.BigDecimalBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-big-decimal-builder-dsl/-big-decimal-builder-dsl.html","searchKeys":["BigDecimalBuilderDsl","fun BigDecimalBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.BigDecimalBuilderDsl.BigDecimalBuilderDsl"]},{"name":"fun Boolean.Companion.of(transform: BooleanBuilderDsl.() -> BooleanBuilderDsl = { BooleanBuilderDsl() }): Boolean","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Boolean.Companion.of(transform: BooleanBuilderDsl.() -> BooleanBuilderDsl = { BooleanBuilderDsl() }): Boolean","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun BooleanBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl.BooleanBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder-dsl/-boolean-builder-dsl.html","searchKeys":["BooleanBuilderDsl","fun BooleanBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl.BooleanBuilderDsl"]},{"name":"fun Double.Companion.of(transform: DoubleBuilderDsl.() -> DoubleBuilderDsl = { DoubleBuilderDsl() }): Double","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Double.Companion.of(transform: DoubleBuilderDsl.() -> DoubleBuilderDsl = { DoubleBuilderDsl() }): Double","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun DoubleBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.DoubleBuilderDsl.DoubleBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-double-builder-dsl/-double-builder-dsl.html","searchKeys":["DoubleBuilderDsl","fun DoubleBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.DoubleBuilderDsl.DoubleBuilderDsl"]},{"name":"fun EnumBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.EnumBuilderDsl.EnumBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder-dsl/-enum-builder-dsl.html","searchKeys":["EnumBuilderDsl","fun EnumBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.EnumBuilderDsl.EnumBuilderDsl"]},{"name":"fun Faker(random: Random = Random.Default)","description":"com.github.stefankoppier.builder.dsl.Faker.Faker","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/-faker.html","searchKeys":["Faker","fun Faker(random: Random = Random.Default)","com.github.stefankoppier.builder.dsl.Faker.Faker"]},{"name":"fun Float.Companion.of(transform: FloatBuilderDsl.() -> FloatBuilderDsl = { FloatBuilderDsl() }): Float","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Float.Companion.of(transform: FloatBuilderDsl.() -> FloatBuilderDsl = { FloatBuilderDsl() }): Float","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun FloatBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.FloatBuilderDsl.FloatBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-float-builder-dsl/-float-builder-dsl.html","searchKeys":["FloatBuilderDsl","fun FloatBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.FloatBuilderDsl.FloatBuilderDsl"]},{"name":"fun Int.Companion.of(transform: IntBuilderDsl.() -> IntBuilderDsl = { IntBuilderDsl() }): Int","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Int.Companion.of(transform: IntBuilderDsl.() -> IntBuilderDsl = { IntBuilderDsl() }): Int","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun IntBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.IntBuilderDsl.IntBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-int-builder-dsl/-int-builder-dsl.html","searchKeys":["IntBuilderDsl","fun IntBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.IntBuilderDsl.IntBuilderDsl"]},{"name":"fun LocalDateBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl.LocalDateBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder-dsl/-local-date-builder-dsl.html","searchKeys":["LocalDateBuilderDsl","fun LocalDateBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl.LocalDateBuilderDsl"]},{"name":"fun Long.Companion.of(transform: LongBuilderDsl.() -> LongBuilderDsl = { LongBuilderDsl() }): Long","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun Long.Companion.of(transform: LongBuilderDsl.() -> LongBuilderDsl = { LongBuilderDsl() }): Long","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun LongBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.LongBuilderDsl.LongBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-long-builder-dsl/-long-builder-dsl.html","searchKeys":["LongBuilderDsl","fun LongBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.LongBuilderDsl.LongBuilderDsl"]},{"name":"fun NumberBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.NumberBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/-number-builder-dsl.html","searchKeys":["NumberBuilderDsl","fun NumberBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.NumberBuilderDsl"]},{"name":"fun OffsetDateTimeBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl.OffsetDateTimeBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder-dsl/-offset-date-time-builder-dsl.html","searchKeys":["OffsetDateTimeBuilderDsl","fun OffsetDateTimeBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl.OffsetDateTimeBuilderDsl"]},{"name":"fun String.Companion.of(transform: StringBuilderDsl.() -> StringBuilderDsl = { StringBuilderDsl() }): String","description":"com.github.stefankoppier.builder.dsl.primitives.of","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/of.html","searchKeys":["of","fun String.Companion.of(transform: StringBuilderDsl.() -> StringBuilderDsl = { StringBuilderDsl() }): String","com.github.stefankoppier.builder.dsl.primitives.of"]},{"name":"fun StringBuilderDsl(faker: Faker = Faker())","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.StringBuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/-string-builder-dsl.html","searchKeys":["StringBuilderDsl","fun StringBuilderDsl(faker: Faker = Faker())","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.StringBuilderDsl"]},{"name":"fun between(min: Int, max: Int): ListBuilderDsl<E, B>","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl.between","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/between.html","searchKeys":["between","fun between(min: Int, max: Int): ListBuilderDsl<E, B>","com.github.stefankoppier.builder.dsl.ListBuilderDsl.between"]},{"name":"fun between(min: Int, max: Int): StringBuilderDsl","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.between","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/between.html","searchKeys":["between","fun between(min: Int, max: Int): StringBuilderDsl","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.between"]},{"name":"fun between(min: T, max: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.between","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/between.html","searchKeys":["between","fun between(min: T, max: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.between"]},{"name":"fun boolean(): Boolean","description":"com.github.stefankoppier.builder.dsl.Faker.boolean","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/boolean.html","searchKeys":["boolean","fun boolean(): Boolean","com.github.stefankoppier.builder.dsl.Faker.boolean"]},{"name":"fun char(pool: List<Char> = ('a'..'z') + ('A'..'Z') + ('0'..'9') + ' '): Char","description":"com.github.stefankoppier.builder.dsl.Faker.char","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/char.html","searchKeys":["char","fun char(pool: List<Char> = ('a'..'z') + ('A'..'Z') + ('0'..'9') + ' '): Char","com.github.stefankoppier.builder.dsl.Faker.char"]},{"name":"fun constant(value: Boolean): BooleanBuilderDsl","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder-dsl/constant.html","searchKeys":["constant","fun constant(value: Boolean): BooleanBuilderDsl","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl.constant"]},{"name":"fun constant(value: LocalDate): LocalDateBuilderDsl","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder-dsl/constant.html","searchKeys":["constant","fun constant(value: LocalDate): LocalDateBuilderDsl","com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl.constant"]},{"name":"fun constant(value: OffsetDateTime): OffsetDateTimeBuilderDsl","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder-dsl/constant.html","searchKeys":["constant","fun constant(value: OffsetDateTime): OffsetDateTimeBuilderDsl","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl.constant"]},{"name":"fun constant(value: String): StringBuilderDsl","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/constant.html","searchKeys":["constant","fun constant(value: String): StringBuilderDsl","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.constant"]},{"name":"fun constant(value: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.constant","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/constant.html","searchKeys":["constant","fun constant(value: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.constant"]},{"name":"fun double(min: Double = Double.MIN_VALUE, max: Double = Double.MAX_VALUE): Double","description":"com.github.stefankoppier.builder.dsl.Faker.double","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/double.html","searchKeys":["double","fun double(min: Double = Double.MIN_VALUE, max: Double = Double.MAX_VALUE): Double","com.github.stefankoppier.builder.dsl.Faker.double"]},{"name":"fun filter(predicate: (E) -> Boolean): EnumBuilderDsl<E>","description":"com.github.stefankoppier.builder.dsl.EnumBuilderDsl.filter","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder-dsl/filter.html","searchKeys":["filter","fun filter(predicate: (E) -> Boolean): EnumBuilderDsl<E>","com.github.stefankoppier.builder.dsl.EnumBuilderDsl.filter"]},{"name":"fun float(min: Float = Float.MIN_VALUE, max: Float = Float.MAX_VALUE): Float","description":"com.github.stefankoppier.builder.dsl.Faker.float","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/float.html","searchKeys":["float","fun float(min: Float = Float.MIN_VALUE, max: Float = Float.MAX_VALUE): Float","com.github.stefankoppier.builder.dsl.Faker.float"]},{"name":"fun format(pattern: String): StringBuilderDsl","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.format","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/format.html","searchKeys":["format","fun format(pattern: String): StringBuilderDsl","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.format"]},{"name":"fun int(min: Int = Int.MIN_VALUE, max: Int = Int.MAX_VALUE): Int","description":"com.github.stefankoppier.builder.dsl.Faker.int","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/int.html","searchKeys":["int","fun int(min: Int = Int.MIN_VALUE, max: Int = Int.MAX_VALUE): Int","com.github.stefankoppier.builder.dsl.Faker.int"]},{"name":"fun localDate(): LocalDate","description":"com.github.stefankoppier.builder.dsl.Faker.localDate","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/local-date.html","searchKeys":["localDate","fun localDate(): LocalDate","com.github.stefankoppier.builder.dsl.Faker.localDate"]},{"name":"fun localTime(): LocalTime","description":"com.github.stefankoppier.builder.dsl.Faker.localTime","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/local-time.html","searchKeys":["localTime","fun localTime(): LocalTime","com.github.stefankoppier.builder.dsl.Faker.localTime"]},{"name":"fun long(min: Long = Long.MIN_VALUE, max: Long = Long.MAX_VALUE): Long","description":"com.github.stefankoppier.builder.dsl.Faker.long","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/long.html","searchKeys":["long","fun long(min: Long = Long.MIN_VALUE, max: Long = Long.MAX_VALUE): Long","com.github.stefankoppier.builder.dsl.Faker.long"]},{"name":"fun max(max: Int): ListBuilderDsl<E, B>","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl.max","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/max.html","searchKeys":["max","fun max(max: Int): ListBuilderDsl<E, B>","com.github.stefankoppier.builder.dsl.ListBuilderDsl.max"]},{"name":"fun max(max: Int): StringBuilderDsl","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.max","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/max.html","searchKeys":["max","fun max(max: Int): StringBuilderDsl","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.max"]},{"name":"fun max(max: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.max","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/max.html","searchKeys":["max","fun max(max: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.max"]},{"name":"fun min(min: Int): ListBuilderDsl<E, B>","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl.min","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/min.html","searchKeys":["min","fun min(min: Int): ListBuilderDsl<E, B>","com.github.stefankoppier.builder.dsl.ListBuilderDsl.min"]},{"name":"fun min(min: Int): StringBuilderDsl","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.min","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/min.html","searchKeys":["min","fun min(min: Int): StringBuilderDsl","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.min"]},{"name":"fun min(min: T): B","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.min","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/min.html","searchKeys":["min","fun min(min: T): B","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.min"]},{"name":"fun offsetDateTime(): OffsetDateTime","description":"com.github.stefankoppier.builder.dsl.Faker.offsetDateTime","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/offset-date-time.html","searchKeys":["offsetDateTime","fun offsetDateTime(): OffsetDateTime","com.github.stefankoppier.builder.dsl.Faker.offsetDateTime"]},{"name":"fun previous(transform: B.(E) -> B): ListBuilderDsl<E, B>","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl.previous","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/previous.html","searchKeys":["previous","fun previous(transform: B.(E) -> B): ListBuilderDsl<E, B>","com.github.stefankoppier.builder.dsl.ListBuilderDsl.previous"]},{"name":"fun string(min: Int = 0, max: Int = 24): String","description":"com.github.stefankoppier.builder.dsl.Faker.string","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/string.html","searchKeys":["string","fun string(min: Int = 0, max: Int = 24): String","com.github.stefankoppier.builder.dsl.Faker.string"]},{"name":"inline fun <E : Enum<E>> enum(predicate: (E) -> Boolean = { true }): E","description":"com.github.stefankoppier.builder.dsl.Faker.enum","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-faker/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> enum(predicate: (E) -> Boolean = { true }): E","com.github.stefankoppier.builder.dsl.Faker.enum"]},{"name":"interface BuilderDsl<T> : Function0<T> ","description":"com.github.stefankoppier.builder.dsl.BuilderDsl","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-builder-dsl/index.html","searchKeys":["BuilderDsl","interface BuilderDsl<T> : Function0<T> ","com.github.stefankoppier.builder.dsl.BuilderDsl"]},{"name":"open operator override fun invoke(): Boolean","description":"com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-boolean-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): Boolean","com.github.stefankoppier.builder.dsl.primitives.BooleanBuilderDsl.invoke"]},{"name":"open operator override fun invoke(): E","description":"com.github.stefankoppier.builder.dsl.EnumBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): E","com.github.stefankoppier.builder.dsl.EnumBuilderDsl.invoke"]},{"name":"open operator override fun invoke(): List<E>","description":"com.github.stefankoppier.builder.dsl.ListBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-list-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): List<E>","com.github.stefankoppier.builder.dsl.ListBuilderDsl.invoke"]},{"name":"open operator override fun invoke(): LocalDate","description":"com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-local-date-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): LocalDate","com.github.stefankoppier.builder.dsl.LocalDateBuilderDsl.invoke"]},{"name":"open operator override fun invoke(): OffsetDateTime","description":"com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-offset-date-time-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): OffsetDateTime","com.github.stefankoppier.builder.dsl.OffsetDateTimeBuilderDsl.invoke"]},{"name":"open operator override fun invoke(): String","description":"com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-string-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): String","com.github.stefankoppier.builder.dsl.primitives.StringBuilderDsl.invoke"]},{"name":"open operator override fun invoke(): T","description":"com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.invoke","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl.primitives/-number-builder-dsl/invoke.html","searchKeys":["invoke","open operator override fun invoke(): T","com.github.stefankoppier.builder.dsl.primitives.NumberBuilderDsl.invoke"]},{"name":"val faker: Faker","description":"com.github.stefankoppier.builder.dsl.EnumBuilderDsl.faker","location":"kotlin-builder-dsl/com.github.stefankoppier.builder.dsl/-enum-builder-dsl/faker.html","searchKeys":["faker","val faker: Faker","com.github.stefankoppier.builder.dsl.EnumBuilderDsl.faker"]}]
