[{"name":"abstract class EnumGenerator<E : Enum<E>, B : EnumGenerator<E, B>>(val faker: Faker = Faker()) : GeneratorDsl<E> ","description":"io.github.stefankoppier.builder.dsl.generators.EnumGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-enum-generator/index.html","searchKeys":["EnumGenerator","abstract class EnumGenerator<E : Enum<E>, B : EnumGenerator<E, B>>(val faker: Faker = Faker()) : GeneratorDsl<E> ","io.github.stefankoppier.builder.dsl.generators.EnumGenerator"]},{"name":"abstract class NumberGenerator<T : Number, B : NumberGenerator<T, B>>(faker: Faker = Faker()) : GeneratorDsl<T> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/index.html","searchKeys":["NumberGenerator","abstract class NumberGenerator<T : Number, B : NumberGenerator<T, B>>(faker: Faker = Faker()) : GeneratorDsl<T> ","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator"]},{"name":"annotation class DataGenerator(val name: String = \"\", val postfix: String = \"Generator\")","description":"io.github.stefankoppier.builder.dsl.annotations.DataGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.annotations/-data-generator/index.html","searchKeys":["DataGenerator","annotation class DataGenerator(val name: String = \"\", val postfix: String = \"Generator\")","io.github.stefankoppier.builder.dsl.annotations.DataGenerator"]},{"name":"class BigDecimalGenerator(faker: Faker = Faker()) : NumberGenerator<BigDecimal, BigDecimalGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.BigDecimalGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-big-decimal-generator/index.html","searchKeys":["BigDecimalGenerator","class BigDecimalGenerator(faker: Faker = Faker()) : NumberGenerator<BigDecimal, BigDecimalGenerator> ","io.github.stefankoppier.builder.dsl.generators.BigDecimalGenerator"]},{"name":"class BooleanGenerator(faker: Faker = Faker()) : GeneratorDsl<Boolean> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-boolean-generator/index.html","searchKeys":["BooleanGenerator","class BooleanGenerator(faker: Faker = Faker()) : GeneratorDsl<Boolean> ","io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator"]},{"name":"class ByteGenerator(faker: Faker = Faker()) : NumberGenerator<Byte, ByteGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.ByteGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-byte-generator/index.html","searchKeys":["ByteGenerator","class ByteGenerator(faker: Faker = Faker()) : NumberGenerator<Byte, ByteGenerator> ","io.github.stefankoppier.builder.dsl.generators.primitives.ByteGenerator"]},{"name":"class CharGenerator(faker: Faker = Faker()) : GeneratorDsl<Char> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-char-generator/index.html","searchKeys":["CharGenerator","class CharGenerator(faker: Faker = Faker()) : GeneratorDsl<Char> ","io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator"]},{"name":"class DoubleGenerator(faker: Faker = Faker()) : NumberGenerator<Double, DoubleGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.DoubleGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-double-generator/index.html","searchKeys":["DoubleGenerator","class DoubleGenerator(faker: Faker = Faker()) : NumberGenerator<Double, DoubleGenerator> ","io.github.stefankoppier.builder.dsl.generators.primitives.DoubleGenerator"]},{"name":"class Faker(random: Random = Random.Default)","description":"io.github.stefankoppier.builder.dsl.Faker","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/index.html","searchKeys":["Faker","class Faker(random: Random = Random.Default)","io.github.stefankoppier.builder.dsl.Faker"]},{"name":"class FloatGenerator(faker: Faker = Faker()) : NumberGenerator<Float, FloatGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.FloatGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-float-generator/index.html","searchKeys":["FloatGenerator","class FloatGenerator(faker: Faker = Faker()) : NumberGenerator<Float, FloatGenerator> ","io.github.stefankoppier.builder.dsl.generators.primitives.FloatGenerator"]},{"name":"class IntGenerator(faker: Faker = Faker()) : NumberGenerator<Int, IntGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.IntGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-int-generator/index.html","searchKeys":["IntGenerator","class IntGenerator(faker: Faker = Faker()) : NumberGenerator<Int, IntGenerator> ","io.github.stefankoppier.builder.dsl.generators.primitives.IntGenerator"]},{"name":"class ListBuilder<E, B : GeneratorDsl<E>>(factory: B, faker: Faker = Faker()) : GeneratorDsl<List<E>> ","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/index.html","searchKeys":["ListBuilder","class ListBuilder<E, B : GeneratorDsl<E>>(factory: B, faker: Faker = Faker()) : GeneratorDsl<List<E>> ","io.github.stefankoppier.builder.dsl.containers.ListBuilder"]},{"name":"class LocalDateGenerator(faker: Faker = Faker()) : GeneratorDsl<LocalDate> ","description":"io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-local-date-generator/index.html","searchKeys":["LocalDateGenerator","class LocalDateGenerator(faker: Faker = Faker()) : GeneratorDsl<LocalDate> ","io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator"]},{"name":"class LongGenerator(faker: Faker = Faker()) : NumberGenerator<Long, LongGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.LongGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-long-generator/index.html","searchKeys":["LongGenerator","class LongGenerator(faker: Faker = Faker()) : NumberGenerator<Long, LongGenerator> ","io.github.stefankoppier.builder.dsl.generators.primitives.LongGenerator"]},{"name":"class NullableBuilder<T, B : GeneratorDsl<T>>(factory: B, faker: Faker = Faker()) : GeneratorDsl<T?> ","description":"io.github.stefankoppier.builder.dsl.containers.NullableBuilder","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-nullable-builder/index.html","searchKeys":["NullableBuilder","class NullableBuilder<T, B : GeneratorDsl<T>>(factory: B, faker: Faker = Faker()) : GeneratorDsl<T?> ","io.github.stefankoppier.builder.dsl.containers.NullableBuilder"]},{"name":"class OffsetDateTimeGenerator(faker: Faker = Faker()) : GeneratorDsl<OffsetDateTime> ","description":"io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-offset-date-time-generator/index.html","searchKeys":["OffsetDateTimeGenerator","class OffsetDateTimeGenerator(faker: Faker = Faker()) : GeneratorDsl<OffsetDateTime> ","io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator"]},{"name":"class ShortGenerator(faker: Faker = Faker()) : NumberGenerator<Short, ShortGenerator> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.ShortGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-short-generator/index.html","searchKeys":["ShortGenerator","class ShortGenerator(faker: Faker = Faker()) : NumberGenerator<Short, ShortGenerator> ","io.github.stefankoppier.builder.dsl.generators.primitives.ShortGenerator"]},{"name":"class StringGenerator(faker: Faker = Faker()) : GeneratorDsl<String> ","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/index.html","searchKeys":["StringGenerator","class StringGenerator(faker: Faker = Faker()) : GeneratorDsl<String> ","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator"]},{"name":"class URIGenerator(faker: Faker = Faker()) : GeneratorDsl<URI> ","description":"io.github.stefankoppier.builder.dsl.generators.URIGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-u-r-i-generator/index.html","searchKeys":["URIGenerator","class URIGenerator(faker: Faker = Faker()) : GeneratorDsl<URI> ","io.github.stefankoppier.builder.dsl.generators.URIGenerator"]},{"name":"constructor(factory: B, faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder.ListBuilder","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/-list-builder.html","searchKeys":["ListBuilder","constructor(factory: B, faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.containers.ListBuilder.ListBuilder"]},{"name":"constructor(factory: B, faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.containers.NullableBuilder.NullableBuilder","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-nullable-builder/-nullable-builder.html","searchKeys":["NullableBuilder","constructor(factory: B, faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.containers.NullableBuilder.NullableBuilder"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.BigDecimalGenerator.BigDecimalGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-big-decimal-generator/-big-decimal-generator.html","searchKeys":["BigDecimalGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.BigDecimalGenerator.BigDecimalGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.EnumGenerator.EnumGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-enum-generator/-enum-generator.html","searchKeys":["EnumGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.EnumGenerator.EnumGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator.LocalDateGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-local-date-generator/-local-date-generator.html","searchKeys":["LocalDateGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator.LocalDateGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator.OffsetDateTimeGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-offset-date-time-generator/-offset-date-time-generator.html","searchKeys":["OffsetDateTimeGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator.OffsetDateTimeGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.URIGenerator.URIGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-u-r-i-generator/-u-r-i-generator.html","searchKeys":["URIGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.URIGenerator.URIGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator.BooleanGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-boolean-generator/-boolean-generator.html","searchKeys":["BooleanGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator.BooleanGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.ByteGenerator.ByteGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-byte-generator/-byte-generator.html","searchKeys":["ByteGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.ByteGenerator.ByteGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator.CharGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-char-generator/-char-generator.html","searchKeys":["CharGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator.CharGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.DoubleGenerator.DoubleGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-double-generator/-double-generator.html","searchKeys":["DoubleGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.DoubleGenerator.DoubleGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.FloatGenerator.FloatGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-float-generator/-float-generator.html","searchKeys":["FloatGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.FloatGenerator.FloatGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.IntGenerator.IntGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-int-generator/-int-generator.html","searchKeys":["IntGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.IntGenerator.IntGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.LongGenerator.LongGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-long-generator/-long-generator.html","searchKeys":["LongGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.LongGenerator.LongGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.NumberGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/-number-generator.html","searchKeys":["NumberGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.NumberGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.ShortGenerator.ShortGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-short-generator/-short-generator.html","searchKeys":["ShortGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.ShortGenerator.ShortGenerator"]},{"name":"constructor(faker: Faker = Faker())","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.StringGenerator","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/-string-generator.html","searchKeys":["StringGenerator","constructor(faker: Faker = Faker())","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.StringGenerator"]},{"name":"constructor(random: Random = Random.Default)","description":"io.github.stefankoppier.builder.dsl.Faker.Faker","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/-faker.html","searchKeys":["Faker","constructor(random: Random = Random.Default)","io.github.stefankoppier.builder.dsl.Faker.Faker"]},{"name":"fun Boolean.Companion.of(transform: BooleanGenerator.() -> BooleanGenerator = { BooleanGenerator() }): Boolean","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Boolean.Companion.of(transform: BooleanGenerator.() -> BooleanGenerator = { BooleanGenerator() }): Boolean","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Byte.Companion.of(transform: ByteGenerator.() -> ByteGenerator = { ByteGenerator() }): Byte","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Byte.Companion.of(transform: ByteGenerator.() -> ByteGenerator = { ByteGenerator() }): Byte","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Char.Companion.of(transform: CharGenerator.() -> CharGenerator = { CharGenerator() }): Char","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Char.Companion.of(transform: CharGenerator.() -> CharGenerator = { CharGenerator() }): Char","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Double.Companion.of(transform: DoubleGenerator.() -> DoubleGenerator = { DoubleGenerator() }): Double","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Double.Companion.of(transform: DoubleGenerator.() -> DoubleGenerator = { DoubleGenerator() }): Double","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Float.Companion.of(transform: FloatGenerator.() -> FloatGenerator = { FloatGenerator() }): Float","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Float.Companion.of(transform: FloatGenerator.() -> FloatGenerator = { FloatGenerator() }): Float","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Int.Companion.of(transform: IntGenerator.() -> IntGenerator = { IntGenerator() }): Int","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Int.Companion.of(transform: IntGenerator.() -> IntGenerator = { IntGenerator() }): Int","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Long.Companion.of(transform: LongGenerator.() -> LongGenerator = { LongGenerator() }): Long","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Long.Companion.of(transform: LongGenerator.() -> LongGenerator = { LongGenerator() }): Long","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun Short.Companion.of(transform: ShortGenerator.() -> ShortGenerator = { ShortGenerator() }): Short","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun Short.Companion.of(transform: ShortGenerator.() -> ShortGenerator = { ShortGenerator() }): Short","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun String.Companion.of(transform: StringGenerator.() -> StringGenerator = { StringGenerator() }): String","description":"io.github.stefankoppier.builder.dsl.generators.primitives.of","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/of.html","searchKeys":["of","fun String.Companion.of(transform: StringGenerator.() -> StringGenerator = { StringGenerator() }): String","io.github.stefankoppier.builder.dsl.generators.primitives.of"]},{"name":"fun asNonNull(): NullableBuilder<T, B>","description":"io.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNonNull","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-nullable-builder/as-non-null.html","searchKeys":["asNonNull","fun asNonNull(): NullableBuilder<T, B>","io.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNonNull"]},{"name":"fun asNull(): NullableBuilder<T, B>","description":"io.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNull","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-nullable-builder/as-null.html","searchKeys":["asNull","fun asNull(): NullableBuilder<T, B>","io.github.stefankoppier.builder.dsl.containers.NullableBuilder.asNull"]},{"name":"fun between(min: Int, max: Int): ListBuilder<E, B>","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder.between","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/between.html","searchKeys":["between","fun between(min: Int, max: Int): ListBuilder<E, B>","io.github.stefankoppier.builder.dsl.containers.ListBuilder.between"]},{"name":"fun between(min: Int, max: Int): StringGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.between","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/between.html","searchKeys":["between","fun between(min: Int, max: Int): StringGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.between"]},{"name":"fun between(min: T, max: T): B","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.between","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/between.html","searchKeys":["between","fun between(min: T, max: T): B","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.between"]},{"name":"fun boolean(): Boolean","description":"io.github.stefankoppier.builder.dsl.Faker.boolean","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/boolean.html","searchKeys":["boolean","fun boolean(): Boolean","io.github.stefankoppier.builder.dsl.Faker.boolean"]},{"name":"fun byte(min: Byte = Byte.MIN_VALUE, max: Byte = Byte.MAX_VALUE): Byte","description":"io.github.stefankoppier.builder.dsl.Faker.byte","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/byte.html","searchKeys":["byte","fun byte(min: Byte = Byte.MIN_VALUE, max: Byte = Byte.MAX_VALUE): Byte","io.github.stefankoppier.builder.dsl.Faker.byte"]},{"name":"fun char(pool: List<Char> = ('a'..'z') + ('A'..'Z') + ('0'..'9') + ' '): Char","description":"io.github.stefankoppier.builder.dsl.Faker.char","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/char.html","searchKeys":["char","fun char(pool: List<Char> = ('a'..'z') + ('A'..'Z') + ('0'..'9') + ' '): Char","io.github.stefankoppier.builder.dsl.Faker.char"]},{"name":"fun constant(value: Boolean): BooleanGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-boolean-generator/constant.html","searchKeys":["constant","fun constant(value: Boolean): BooleanGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator.constant"]},{"name":"fun constant(value: Char): CharGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-char-generator/constant.html","searchKeys":["constant","fun constant(value: Char): CharGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator.constant"]},{"name":"fun constant(value: E): B","description":"io.github.stefankoppier.builder.dsl.generators.EnumGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-enum-generator/constant.html","searchKeys":["constant","fun constant(value: E): B","io.github.stefankoppier.builder.dsl.generators.EnumGenerator.constant"]},{"name":"fun constant(value: List<E>): ListBuilder<E, B>","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder.constant","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/constant.html","searchKeys":["constant","fun constant(value: List<E>): ListBuilder<E, B>","io.github.stefankoppier.builder.dsl.containers.ListBuilder.constant"]},{"name":"fun constant(value: LocalDate): LocalDateGenerator","description":"io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-local-date-generator/constant.html","searchKeys":["constant","fun constant(value: LocalDate): LocalDateGenerator","io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator.constant"]},{"name":"fun constant(value: OffsetDateTime): OffsetDateTimeGenerator","description":"io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-offset-date-time-generator/constant.html","searchKeys":["constant","fun constant(value: OffsetDateTime): OffsetDateTimeGenerator","io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator.constant"]},{"name":"fun constant(value: String): StringGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/constant.html","searchKeys":["constant","fun constant(value: String): StringGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.constant"]},{"name":"fun constant(value: T): B","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/constant.html","searchKeys":["constant","fun constant(value: T): B","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.constant"]},{"name":"fun constant(value: URI): URIGenerator","description":"io.github.stefankoppier.builder.dsl.generators.URIGenerator.constant","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-u-r-i-generator/constant.html","searchKeys":["constant","fun constant(value: URI): URIGenerator","io.github.stefankoppier.builder.dsl.generators.URIGenerator.constant"]},{"name":"fun double(min: Double = Double.MIN_VALUE, max: Double = Double.MAX_VALUE): Double","description":"io.github.stefankoppier.builder.dsl.Faker.double","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/double.html","searchKeys":["double","fun double(min: Double = Double.MIN_VALUE, max: Double = Double.MAX_VALUE): Double","io.github.stefankoppier.builder.dsl.Faker.double"]},{"name":"fun filter(predicate: (E) -> Boolean): B","description":"io.github.stefankoppier.builder.dsl.generators.EnumGenerator.filter","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-enum-generator/filter.html","searchKeys":["filter","fun filter(predicate: (E) -> Boolean): B","io.github.stefankoppier.builder.dsl.generators.EnumGenerator.filter"]},{"name":"fun float(min: Float = Float.MIN_VALUE, max: Float = Float.MAX_VALUE): Float","description":"io.github.stefankoppier.builder.dsl.Faker.float","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/float.html","searchKeys":["float","fun float(min: Float = Float.MIN_VALUE, max: Float = Float.MAX_VALUE): Float","io.github.stefankoppier.builder.dsl.Faker.float"]},{"name":"fun format(pattern: String): StringGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.format","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/format.html","searchKeys":["format","fun format(pattern: String): StringGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.format"]},{"name":"fun int(min: Int = Int.MIN_VALUE, max: Int = Int.MAX_VALUE): Int","description":"io.github.stefankoppier.builder.dsl.Faker.int","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/int.html","searchKeys":["int","fun int(min: Int = Int.MIN_VALUE, max: Int = Int.MAX_VALUE): Int","io.github.stefankoppier.builder.dsl.Faker.int"]},{"name":"fun localDate(): LocalDate","description":"io.github.stefankoppier.builder.dsl.Faker.localDate","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/local-date.html","searchKeys":["localDate","fun localDate(): LocalDate","io.github.stefankoppier.builder.dsl.Faker.localDate"]},{"name":"fun localTime(): LocalTime","description":"io.github.stefankoppier.builder.dsl.Faker.localTime","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/local-time.html","searchKeys":["localTime","fun localTime(): LocalTime","io.github.stefankoppier.builder.dsl.Faker.localTime"]},{"name":"fun long(min: Long = Long.MIN_VALUE, max: Long = Long.MAX_VALUE): Long","description":"io.github.stefankoppier.builder.dsl.Faker.long","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/long.html","searchKeys":["long","fun long(min: Long = Long.MIN_VALUE, max: Long = Long.MAX_VALUE): Long","io.github.stefankoppier.builder.dsl.Faker.long"]},{"name":"fun max(max: Int): ListBuilder<E, B>","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder.max","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/max.html","searchKeys":["max","fun max(max: Int): ListBuilder<E, B>","io.github.stefankoppier.builder.dsl.containers.ListBuilder.max"]},{"name":"fun max(max: Int): StringGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.max","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/max.html","searchKeys":["max","fun max(max: Int): StringGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.max"]},{"name":"fun max(max: T): B","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.max","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/max.html","searchKeys":["max","fun max(max: T): B","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.max"]},{"name":"fun min(min: Int): ListBuilder<E, B>","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder.min","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/min.html","searchKeys":["min","fun min(min: Int): ListBuilder<E, B>","io.github.stefankoppier.builder.dsl.containers.ListBuilder.min"]},{"name":"fun min(min: Int): StringGenerator","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.min","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/min.html","searchKeys":["min","fun min(min: Int): StringGenerator","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.min"]},{"name":"fun min(min: T): B","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.min","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/min.html","searchKeys":["min","fun min(min: T): B","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.min"]},{"name":"fun offsetDateTime(): OffsetDateTime","description":"io.github.stefankoppier.builder.dsl.Faker.offsetDateTime","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/offset-date-time.html","searchKeys":["offsetDateTime","fun offsetDateTime(): OffsetDateTime","io.github.stefankoppier.builder.dsl.Faker.offsetDateTime"]},{"name":"fun protocol(value: String): URIGenerator","description":"io.github.stefankoppier.builder.dsl.generators.URIGenerator.protocol","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-u-r-i-generator/protocol.html","searchKeys":["protocol","fun protocol(value: String): URIGenerator","io.github.stefankoppier.builder.dsl.generators.URIGenerator.protocol"]},{"name":"fun short(min: Short = Short.MIN_VALUE, max: Short = Short.MAX_VALUE): Short","description":"io.github.stefankoppier.builder.dsl.Faker.short","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/short.html","searchKeys":["short","fun short(min: Short = Short.MIN_VALUE, max: Short = Short.MAX_VALUE): Short","io.github.stefankoppier.builder.dsl.Faker.short"]},{"name":"fun string(min: Int = 0, max: Int = 24): String","description":"io.github.stefankoppier.builder.dsl.Faker.string","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/string.html","searchKeys":["string","fun string(min: Int = 0, max: Int = 24): String","io.github.stefankoppier.builder.dsl.Faker.string"]},{"name":"inline fun <E : Enum<E>> enum(predicate: (E) -> Boolean = { true }): E","description":"io.github.stefankoppier.builder.dsl.Faker.enum","location":"runtime/io.github.stefankoppier.builder.dsl/-faker/enum.html","searchKeys":["enum","inline fun <E : Enum<E>> enum(predicate: (E) -> Boolean = { true }): E","io.github.stefankoppier.builder.dsl.Faker.enum"]},{"name":"interface GeneratorDsl<T> : Function0<T> ","description":"io.github.stefankoppier.builder.dsl.generators.GeneratorDsl","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-generator-dsl/index.html","searchKeys":["GeneratorDsl","interface GeneratorDsl<T> : Function0<T> ","io.github.stefankoppier.builder.dsl.generators.GeneratorDsl"]},{"name":"open operator override fun invoke(): Boolean","description":"io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-boolean-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): Boolean","io.github.stefankoppier.builder.dsl.generators.primitives.BooleanGenerator.invoke"]},{"name":"open operator override fun invoke(): Char","description":"io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-char-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): Char","io.github.stefankoppier.builder.dsl.generators.primitives.CharGenerator.invoke"]},{"name":"open operator override fun invoke(): E","description":"io.github.stefankoppier.builder.dsl.generators.EnumGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-enum-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): E","io.github.stefankoppier.builder.dsl.generators.EnumGenerator.invoke"]},{"name":"open operator override fun invoke(): List<E>","description":"io.github.stefankoppier.builder.dsl.containers.ListBuilder.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-list-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): List<E>","io.github.stefankoppier.builder.dsl.containers.ListBuilder.invoke"]},{"name":"open operator override fun invoke(): LocalDate","description":"io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-local-date-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): LocalDate","io.github.stefankoppier.builder.dsl.generators.LocalDateGenerator.invoke"]},{"name":"open operator override fun invoke(): OffsetDateTime","description":"io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-offset-date-time-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): OffsetDateTime","io.github.stefankoppier.builder.dsl.generators.OffsetDateTimeGenerator.invoke"]},{"name":"open operator override fun invoke(): String","description":"io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-string-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): String","io.github.stefankoppier.builder.dsl.generators.primitives.StringGenerator.invoke"]},{"name":"open operator override fun invoke(): T","description":"io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators.primitives/-number-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): T","io.github.stefankoppier.builder.dsl.generators.primitives.NumberGenerator.invoke"]},{"name":"open operator override fun invoke(): T?","description":"io.github.stefankoppier.builder.dsl.containers.NullableBuilder.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.containers/-nullable-builder/invoke.html","searchKeys":["invoke","open operator override fun invoke(): T?","io.github.stefankoppier.builder.dsl.containers.NullableBuilder.invoke"]},{"name":"open operator override fun invoke(): URI","description":"io.github.stefankoppier.builder.dsl.generators.URIGenerator.invoke","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-u-r-i-generator/invoke.html","searchKeys":["invoke","open operator override fun invoke(): URI","io.github.stefankoppier.builder.dsl.generators.URIGenerator.invoke"]},{"name":"val faker: Faker","description":"io.github.stefankoppier.builder.dsl.generators.EnumGenerator.faker","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-enum-generator/faker.html","searchKeys":["faker","val faker: Faker","io.github.stefankoppier.builder.dsl.generators.EnumGenerator.faker"]},{"name":"val name: String","description":"io.github.stefankoppier.builder.dsl.annotations.DataGenerator.name","location":"runtime/io.github.stefankoppier.builder.dsl.annotations/-data-generator/name.html","searchKeys":["name","val name: String","io.github.stefankoppier.builder.dsl.annotations.DataGenerator.name"]},{"name":"val postfix: String","description":"io.github.stefankoppier.builder.dsl.annotations.DataGenerator.postfix","location":"runtime/io.github.stefankoppier.builder.dsl.annotations/-data-generator/postfix.html","searchKeys":["postfix","val postfix: String","io.github.stefankoppier.builder.dsl.annotations.DataGenerator.postfix"]},{"name":"var protocol: String","description":"io.github.stefankoppier.builder.dsl.generators.URIGenerator.protocol","location":"runtime/io.github.stefankoppier.builder.dsl.generators/-u-r-i-generator/protocol.html","searchKeys":["protocol","var protocol: String","io.github.stefankoppier.builder.dsl.generators.URIGenerator.protocol"]}]
